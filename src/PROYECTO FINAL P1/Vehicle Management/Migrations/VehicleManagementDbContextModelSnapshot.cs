// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Vehicle_Management.DataAccess.Models;

#nullable disable

namespace Vehicle_Management.Migrations
{
    [DbContext(typeof(VehicleManagementDbContext))]
    partial class VehicleManagementDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Vehicle_Management.DataAccess.Models.Client", b =>
                {
                    b.Property<int>("ClientId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("client_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ClientId"));

                    b.Property<string>("Address")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("address");

                    b.Property<DateOnly?>("BirthDate")
                        .HasColumnType("date")
                        .HasColumnName("birth_date");

                    b.Property<string>("DriversLicence")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("drivers_licence");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("email");

                    b.Property<string>("Fullname")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("fullname");

                    b.Property<string>("PhoneNumber")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)")
                        .HasColumnName("phone_number");

                    b.Property<int>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("user_id");

                    b.HasKey("ClientId")
                        .HasName("PK__Clientes__BF21A4248176CB8E");

                    b.HasIndex("UserId");

                    b.HasIndex(new[] { "DriversLicence" }, "UQ__Clientes__5D1D23F4672E7103")
                        .IsUnique();

                    b.HasIndex(new[] { "Email" }, "UQ__Clientes__AB6E6164C903991C")
                        .IsUnique();

                    b.ToTable("Clients");
                });

            modelBuilder.Entity("Vehicle_Management.DataAccess.Models.Payment", b =>
                {
                    b.Property<int>("PaymentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("payment_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PaymentId"));

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(10, 2)")
                        .HasColumnName("amount");

                    b.Property<DateOnly>("PaymentDate")
                        .HasColumnType("date")
                        .HasColumnName("payment_date");

                    b.Property<string>("PaymentMethod")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("payment_method");

                    b.Property<int>("ReservationId")
                        .HasColumnType("int")
                        .HasColumnName("reservation_id");

                    b.HasKey("PaymentId")
                        .HasName("PK__Payment__ED1FC9EA07A52DFF");

                    b.HasIndex("ReservationId");

                    b.ToTable("Payment", (string)null);
                });

            modelBuilder.Entity("Vehicle_Management.DataAccess.Models.Reservation", b =>
                {
                    b.Property<int>("ReservationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("reservation_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ReservationId"));

                    b.Property<int>("ClientId")
                        .HasColumnType("int")
                        .HasColumnName("client_id");

                    b.Property<DateOnly>("EndDate")
                        .HasColumnType("date")
                        .HasColumnName("end_date");

                    b.Property<DateOnly>("StartDate")
                        .HasColumnType("date")
                        .HasColumnName("start_date");

                    b.Property<string>("State")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("state");

                    b.Property<int>("VehicleId")
                        .HasColumnType("int")
                        .HasColumnName("vehicle_id");

                    b.HasKey("ReservationId")
                        .HasName("PK__Reservat__31384C29CEBE09ED");

                    b.HasIndex("ClientId");

                    b.HasIndex("VehicleId");

                    b.ToTable("Reservation", (string)null);
                });

            modelBuilder.Entity("Vehicle_Management.DataAccess.Models.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("user_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserId"));

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("password");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("role");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("user_name");

                    b.HasKey("UserId")
                        .HasName("PK__Users__B9BE370F2722DA5D");

                    b.HasIndex(new[] { "UserName" }, "UQ__Users__7C9273C4E97FAEC6")
                        .IsUnique();

                    b.HasIndex(new[] { "Password" }, "unique_password")
                        .IsUnique();

                    b.HasIndex(new[] { "UserName" }, "unique_user_name")
                        .IsUnique();

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Vehicle_Management.DataAccess.Models.Vehicle", b =>
                {
                    b.Property<int>("VehicleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("vehicle_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("VehicleId"));

                    b.Property<bool>("Available")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true)
                        .HasColumnName("available");

                    b.Property<string>("Brand")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("brand");

                    b.Property<string>("FuelType")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("fuel_type");

                    b.Property<string>("LicensePlate")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("license_plate");

                    b.Property<int>("ManufactureYear")
                        .HasColumnType("int")
                        .HasColumnName("manufacture_year");

                    b.Property<string>("Model")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("model");

                    b.Property<int>("PassengerCapacity")
                        .HasColumnType("int")
                        .HasColumnName("passenger_capacity");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("VehicleId")
                        .HasName("PK__Vehicles__C186ECA2E486774B");

                    b.HasIndex(new[] { "LicensePlate" }, "UQ__Vehicles__F72CD56EB20F0225")
                        .IsUnique();

                    b.ToTable("Vehicles");
                });

            modelBuilder.Entity("Vehicle_Management.DataAccess.Models.Client", b =>
                {
                    b.HasOne("Vehicle_Management.DataAccess.Models.User", "User")
                        .WithMany("Clients")
                        .HasForeignKey("UserId")
                        .IsRequired()
                        .HasConstraintName("fk_user_id");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Vehicle_Management.DataAccess.Models.Payment", b =>
                {
                    b.HasOne("Vehicle_Management.DataAccess.Models.Reservation", "Reservation")
                        .WithMany("Payments")
                        .HasForeignKey("ReservationId")
                        .IsRequired()
                        .HasConstraintName("FK__Payment__reserva__5AEE82B9");

                    b.Navigation("Reservation");
                });

            modelBuilder.Entity("Vehicle_Management.DataAccess.Models.Reservation", b =>
                {
                    b.HasOne("Vehicle_Management.DataAccess.Models.Client", "Client")
                        .WithMany("Reservations")
                        .HasForeignKey("ClientId")
                        .IsRequired()
                        .HasConstraintName("FK__Reservati__clien__571DF1D5");

                    b.HasOne("Vehicle_Management.DataAccess.Models.Vehicle", "Vehicle")
                        .WithMany("Reservations")
                        .HasForeignKey("VehicleId")
                        .IsRequired()
                        .HasConstraintName("FK__Reservati__vehic__5812160E");

                    b.Navigation("Client");

                    b.Navigation("Vehicle");
                });

            modelBuilder.Entity("Vehicle_Management.DataAccess.Models.Client", b =>
                {
                    b.Navigation("Reservations");
                });

            modelBuilder.Entity("Vehicle_Management.DataAccess.Models.Reservation", b =>
                {
                    b.Navigation("Payments");
                });

            modelBuilder.Entity("Vehicle_Management.DataAccess.Models.User", b =>
                {
                    b.Navigation("Clients");
                });

            modelBuilder.Entity("Vehicle_Management.DataAccess.Models.Vehicle", b =>
                {
                    b.Navigation("Reservations");
                });
#pragma warning restore 612, 618
        }
    }
}
